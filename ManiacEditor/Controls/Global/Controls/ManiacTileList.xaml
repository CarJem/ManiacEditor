<UserControl x:Class="ManiacEditor.Controls.Global.Controls.ManiacTileList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ManiacEditor.Controls.Global.Controls"
             xmlns:genLib="clr-namespace:GenerationsLib.WPF.Controls;assembly=GenerationsLib.WPF"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" SizeChanged="TileList_Resize">
    <Grid>
        <ListView ScrollViewer.IsDeferredScrollingEnabled="False" SelectionChanged="TileList_SelectionChanged" SelectionMode="Single" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="TileList" MouseDown="TileList_MouseDown" MouseUp="TileList_MouseUp" MouseWheel="TileList_MouseWheel" MouseMove="TileList_MouseMove" KeyDown="TileList_KeyDown" PreviewKeyDown="TileList_PreviewKeyDown"  ItemContainerStyle="{DynamicResource TileListViewItemStyle}">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <genLib:VirtualizingTilePanel x:Name="TilePanel"
                        ChildSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.ImageSize}" 
                        VirtualizingPanel.VirtualizationMode="Recycling"  
                        IsItemsHost="True"></genLib:VirtualizingTilePanel>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Image Source="{Binding .}" 
                        RenderOptions.BitmapScalingMode="NearestNeighbor"
                        RenderTransform="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.CurrentTransform}" 
                        RenderTransformOrigin="0.5,0.5"></Image>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
    <UserControl.Resources>
        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>
        <Style x:Key="TileListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderBrush="Black" BorderThickness="2" Background="Transparent" Padding="0" SnapsToDevicePixels="True">
                            <ContentPresenter  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#7C7C7C"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Red"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
</UserControl>
