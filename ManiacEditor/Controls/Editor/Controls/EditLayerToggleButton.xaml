<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ManiacEditor.Controls.Editor.Controls"
             xmlns:maniac="clr-namespace:ManiacEditor"
             xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             x:Class="ManiacEditor.Controls.Editor.Controls.EditLayerToggleButton"
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="65">
    <Grid Background="Transparent">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="28"></RowDefinition>
            <RowDefinition Height="1"></RowDefinition>
            <RowDefinition Height="13"></RowDefinition>
        </Grid.RowDefinitions>
        <Button Grid.Column="0" Grid.Row="1" MouseLeave="ToggleButton_MouseLeave" MouseMove="ToggleButton_MouseMove" Click="ToggleButton_Click" Background="Transparent" Foreground="{Binding TextForeground}" Content="{Binding Text}" BorderBrush="Transparent" MouseDown="ToggleButton_MouseDown" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{DynamicResource EditLayerFlatButton}" x:Name="ToggleButton"/>
        <Grid Grid.Column="0" Margin="2,0,2,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{DynamicResource DisabledText}" Grid.Row="2" Grid.ColumnSpan="2"></Grid>
        <xctk:DropDownButton IsEnabled="True" Style="{DynamicResource EditLayerDropDown}" Margin="2,0,2,2" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Opened="LayerOptionsDropdownButton_Opened_1" MouseLeave="ToggleButton_MouseLeave" MouseMove="ToggleButton_MouseMove" Visibility="Visible" Background="Transparent" BorderBrush="Transparent" x:Name="LayerOptionsDropdownButton">
            <xctk:DropDownButton.DropDownContent>
                <StackPanel Background="{DynamicResource ContextMenuBackground}">
                    <Label Content="Layer Options:" IsEnabled="False"/>
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <MenuItem Header="Show Layer Scroll Lines" IsCheckable="True" x:Name="ShowLayerScrollDetails" Click="MenuItem_Click"/>
                    <MenuItem Header="Allow Layer To Animate Parallax" IsCheckable="True" x:Name="AllowLayerToAnimateParallax" Click="AllowLayerToAnimateParallax_Click"/>
                </StackPanel>
            </xctk:DropDownButton.DropDownContent>
        </xctk:DropDownButton>
        <ToggleButton Checked="LayerToggle_Checked" Unchecked="LayerToggle_Unchecked" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="LayerToggle" IsChecked="{Binding IsCheckedN}"/>
        <ToggleButton Checked="LayerToggle_Checked" Unchecked="LayerToggle_Unchecked" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="LayerAToggle" IsChecked="{Binding IsCheckedA}"/>
        <ToggleButton Checked="LayerToggle_Checked" Unchecked="LayerToggle_Unchecked" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="LayerBToggle" IsChecked="{Binding IsCheckedB}"/>
    </Grid>
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="EditLayerFlatButton" x:Name="EditLayerFlatButtons" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="border" Padding="5,5,5,5" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                                    <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.7"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="EditLayerDropDown" TargetType="{x:Type xctk:DropDownButton}">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
                <Setter Property="DropDownContentBackground">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFF0F0F0" Offset="0"/>
                            <GradientStop Color="#FFE5E5E5" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
                            <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                                <ToggleButton x:Name="PART_DropDownButton" Grid.Column="1" IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource ToggleButtonStyle1}">
                                    <ToggleButton.IsHitTestVisible>
                                        <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <xctk:InverseBoolConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </ToggleButton.IsHitTestVisible>
                                    <Grid x:Name="FillGrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Grid x:Name="arrowGlyph" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Margin="4,0">
                                            <Path x:Name="Arrow" Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z" Fill="{DynamicResource NormalText}" Height="5" Margin="0,1,0,0" Width="9"/>
                                        </Grid>
                                    </Grid>
                                </ToggleButton>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}" Placement="{TemplateBinding DropDownPosition}" StaysOpen="False" ToolTip="" VerticalOffset="1">
                                    <Popup.Resources>
                                        <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                            <Style.Triggers>
                                                <Trigger Property="Content" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Popup.Resources>
                                    <Border BorderBrush="#FFABADB3" BorderThickness="1" Background="{TemplateBinding DropDownContentBackground}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Auto">
                                            <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Background" TargetName="FillGrid" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
</UserControl>
