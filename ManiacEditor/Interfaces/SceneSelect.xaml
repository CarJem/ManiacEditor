<Window x:Class="ManiacEditor.Interfaces.SceneSelect"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ManiacEditor.Interfaces"
        xmlns:maniac="clr-namespace:ManiacEditor"
        mc:Ignorable="d"
        Title="Select a Scene..." Height="580" Width="1168" Background="{DynamicResource NormalBackground}" Loaded="Window_Loaded" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"></ColumnDefinition>
            <ColumnDefinition Width="1*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="10*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>

        <ToolBarPanel HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="30" Background="{DynamicResource StatusBarBackground}" Grid.Column="0" Grid.ColumnSpan="2">
            <Button Style="{DynamicResource Flat2}" x:Name="optionsButton" Width="70"  Height="30" Content="Options" Grid.Column="2" Background="{DynamicResource StatusBarBackground}" BorderThickness="0" Foreground="{DynamicResource NormalText}" Margin="0,0,8,0" HorizontalAlignment="Right" Click="OptionsButton_Click">
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove All Data Directories" Click="clearDataDirectoriesToolStripMenuItem_Click_1"></MenuItem>
                        <MenuItem Header="Remove All Saved Places" Click="removeAllSavedPlacesToolStripMenuItem_Click"></MenuItem>
                        <MenuItem Header="Remove All Mods" Click="removeAllModsToolStripMenuItem_Click"></MenuItem>
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <Label HorizontalAlignment="Left" x:Name="dataLabelToolStripItem" Content="Data Directory: NULL" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="0" Margin="0,-30,0,0"></Label>
        </ToolBarPanel>


        <Label Grid.Row="1" Grid.ColumnSpan="1" Content="Filter:" VerticalAlignment="Center" Margin="5,0,0,0"></Label>
        <TextBox x:Name="FilterText" Grid.Row="1" Grid.ColumnSpan="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="20" Margin="45,0,10,0" TextChanged="FilterText_TextChanged"></TextBox>


        <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1" Height="25" VerticalAlignment="Center" HorizontalAlignment="Stretch">
            <Label Content="Quick Panel:"></Label>
        </StackPanel>

        <Grid Background="LightGray" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="scenesTreeHost" Grid.Column="0" Grid.Row="2" Margin="10"></Grid>
        <Grid Background="LightGray" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="recentDataDirListHost" Grid.Column="1" Grid.Row="2" Margin="10"></Grid>

        <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal" Height="25" VerticalAlignment="Center">
            <CheckBox x:Name="isFilesView" Grid.Row="3" Grid.Column="0" Content="Files View" Margin="10,0,0,0" VerticalAlignment="Center" Checked="isFilesView_CheckedChanged" Unchecked="isFilesView_CheckedChanged"></CheckBox>
            <CheckBox x:Name="preRenderCheckbox" Grid.Row="3" Grid.Column="0" Content="Pre-Render on Load" Margin="10,0,0,0" VerticalAlignment="Center"></CheckBox>
        </StackPanel>

        <Button x:Name="browse" Grid.Row="3" Grid.Column="0" Height="25" Content="Browse..." Margin="0,0,100,0" Width="80" VerticalAlignment="Center" HorizontalAlignment="Right" Click="browse_Click"></Button>
        <Button IsEnabled="False" x:Name="selectButton" Height="25" Grid.Row="3" Grid.Column="0" Content="Select" Margin="0,0,10,0" Width="80" VerticalAlignment="Center" HorizontalAlignment="Right"></Button>

        <Button Grid.Row="3" Grid.Column="1" Height="25" Content="Load Selected" Margin="0,0,190,0" Width="100" VerticalAlignment="Center" HorizontalAlignment="Right" Click="load_Click"></Button>
        <Button x:Name="addButton" Grid.Row="3" Height="25" Grid.Column="1"  Content="Add..." Margin="0,0,100,0" Width="80" VerticalAlignment="Center" HorizontalAlignment="Right" Click="addButton_Click">
            <Button.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Data Directory" Click="dataDirectoryToolStripMenuItem_Click"></MenuItem>
                    <MenuItem Header="Saved Place" Click="savedPlaceToolStripMenuItem_Click"></MenuItem>
                    <MenuItem Header="Mod" Click="modToolStripMenuItem_Click"></MenuItem>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
        <Button Grid.Row="3" Grid.Column="1" Height="25"  Content="Cancel" Margin="0,0,10,0" Width="80" VerticalAlignment="Center" HorizontalAlignment="Right" Click="Button_Click"></Button>



        <StatusBar HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="30" Grid.Row="4" Grid.ColumnSpan="2" Background="{DynamicResource StatusBarBackground}">
            <StackPanel Orientation="Horizontal">
                <Label x:Name="modFolderStatusLabel" Content="Mod Directory: NULL" Grid.ColumnSpan="2"></Label>
            </StackPanel>
            <StatusBarItem HorizontalAlignment="Right">
                <Button Click="toolStripDropDownButton1_Click" Style="{DynamicResource Flat2}" Content="Unload Mod" Background="{DynamicResource StatusBarBackground}" Foreground="{DynamicResource NormalText}" BorderThickness="0" Height="26"></Button>
            </StatusBarItem>
        </StatusBar>


    </Grid>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <maniac:SkinResourceDictionary LightSource="/ManiacEditor;component/Resources/Themes/LightColors.xaml" 
                                              DarkSource="/ManiacEditor;component/Resources/Themes/DarkColors.xaml" />
                <ResourceDictionary Source="/ManiacEditor;component/Interfaces/Controls/ContextMenu.xaml"/>
                <ResourceDictionary Source="/ManiacEditor;component/Interfaces/Controls/Toolbar.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type Image}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ComboBox}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{DynamicResource ToolbarBackground}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TabControl}">
                <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DisabledToggleButton" TargetType="{x:Type ToggleButton}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledText}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource NormalText}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="Flat" x:Name="FlatToggleButtons" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="border" Padding="5,0,5,0" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="Control.IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Flat2" x:Name="FlatButtons" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="border" Padding="5,0,5,0" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                                </Trigger>
                                <Trigger Property="Control.IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ContextMenuSelectedColor}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ContextMenuSelectedColorBack}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RemoveMouseOverEffect" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" 
                            BorderThickness="1"
                            Padding="0,0" 
                            BorderBrush="Transparent" 
                            CornerRadius="0" 
                            Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid Name="Panel">
                                <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Panel" Property="Background" Value="{DynamicResource DisabledText}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Panel" Property="Background" Value="{DynamicResource StatusBarBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
</Window>
